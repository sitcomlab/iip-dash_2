apiVersion: apps/v1
kind: Deployment
metadata:
  name: bikeinfra
  labels:
    app: nodejs
    component: backend
    release: stable
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
      component: backend
      release: stable
  strategy:
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 2
  template:
    metadata:
      labels:
        app: nodejs
        component: backend
        release: stable
    spec:
      #anti-affinity is basically to keep pods on different nodes from another.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: nodejs
                  component: backend
                  release: stable
      #securityContext:
      #  runAsNonRoot: true
      imagePullSecrets:
        - name: regcred

      containers:
        - name: bikeinfra
          image: zivgitlab.wwu.io/rsubrama/ip-deployment/bikeinfra:latest
          #command: [ "/usr/sbin/nginx" ]
          #args: [ "-c", "/etc/nginx/nginx.conf" ]
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
              ephemeral-storage: 1Gi
            # Limits for cpu, memory and ephemeral-storage are mandatory.
            limits:
              cpu: 800m
              memory: 1024Mi
              ephemeral-storage: 1Gi
          # Security best practices to not run as root user
          securityContext:
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            #runAsUser: 1000
            #runAsGroup: 1000
          ports:
            - name: http
              containerPort: 8000
          #readinessProbe:
          #  httpGet:
          #    port: http
          #livenessProbe:
          #  httpGet:
          #    port: http

          #TODO: use volume-mounts so fetched data doesnt have to be re-fetched on service restart
          volumeMounts:
            - name: out
              mountPath: /apps/out
          #  - name: run
          #    mountPath: /var/run
      volumes:
        - name: out
          emptyDir:
            medium: Memory
